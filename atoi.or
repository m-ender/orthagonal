; Copyright 1994, Jeff Epler
; You may use this file in any way you desire.  There are no warranties, etc,
; etc.
; Converts the command-line arg into a decimal number
0 0 99
255 0 99
1 0 0
2 0 254
3 0 255
4 0 #
; (255,254) holds our 'running total'
5 0 0
6 0 254
7 0 254
; (254,254) holds our index into the argument
8 0 0
9 0 ?
10 0 cw
; This is the entry point, when we return to the 'loop'.
11 0 254
12 0 255
13 0 =
14 0 10
15 0 *
; Multiply old total by 10
16 0 255
17 0 254
18 0 254
19 0 =
20 0 =
21 0 '0
22 0 -
23 0 +
; add the converted character from index
24 0 254
25 0 255
26 0 #
27 0 cw
27 1 cw
; store it
26 1 254
25 1 254
24 1 =
23 1 1
22 1 +
21 1 @
; This duplicate is for below, where we check for nul
20 1 254
19 1 254
18 1 #
; increment index
17 1 255
16 1 ~
15 1 =
14 1 nop
13 1 nop
12 1 nop
11 1 ?
10 1 cw
; if index points to nul, go to where we print and terminate
; else loop
9 1 254
8 1 255
7 1 =
6 1 d
5 1 0
4 1 c
3 1 0
2 1 ret
